#!/bin/sh

libpath_add() {
    [ -z "$1" ] && return
    LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$1
}

server_dir="@libdir@/dirsrv/"
SCRIPT=$(readlink -f $0)
SCRIPTPATH=$(dirname $SCRIPT)
if [ $SCRIPTPATH == "/usr/sbin" ]
then
    prefix=`echo "$SCRIPTPATH" | sed -e 's/\/usr\/sbin//'`
    server_sbin="/usr/sbin"
else
    prefix=`echo "$SCRIPTPATH" | sed -e 's/\/sbin//'`
    server_sbin=$prefix"/sbin"
fi

libpath_add "$server_dir"
libpath_add "$prefix@nss_libdir@"
libpath_add "$prefix@libdir@"
libpath_add "$prefix@pcre_libdir@"

export LD_LIBRARY_PATH
SHLIB_PATH=$LD_LIBRARY_PATH
export SHLIB_PATH

make_ldiffile()
{
    be=""
    while [ "$1" != "" ]
    do
        if [ "$1" = "-a" ]; then
            shift
            echo $1
            return 1
        elif [ "$1" = "-n" ]; then
            shift
            if [ "$be" = "" ]; then
                be="$1"
            else
                tmpbe="$be"
                be="${tmpbe}-$1"
            fi
        elif [ "$1" = "-s" ]; then
            shift
            if [ "$1" != "" ]; then
                rdn=`echo $1 | awk -F, '{print $1}'`
                rdnval=`echo $rdn | awk -F= '{print $2}'`
                if [ "$be" = "" ]; then
                    be="$rdnval"
                else
                    tmpbe="$be"
                    be="${tmpbe}-$rdnval"
                fi
            fi
        elif [ "$1" = "-M" ]; then
            be=""
        fi
        if [ "$1" != "" ]; then
            shift
        fi
    done

    if [ "$be" = "" ]; then
        echo $prefix/var/lib/dirsrv/slapd-$servid/ldif/$servid-`date +%Y_%m_%d_%H%M%S`.ldif
    else
        echo $prefix/var/lib/dirsrv/slapd-$servid/ldif/$servid-${be}-`date +%Y_%m_%d_%H%M%S`.ldif
    fi
    return 0
}

cd $server_sbin
if [ "$#" -lt 2 ];
then
    echo "Usage: db2ldif [-Z serverID] {-n backend_instance}* | {-s includesuffix}*"
    echo "               [{-x excludesuffix}*] [-a outputfile]"
    echo "               [-N] [-r] [-C] [-u] [-U] [-m] [-M] [-1] [-q]"
    echo "Note: either \"-n backend_instance\" or \"-s includesuffix\" is required."
    exit 1
fi
         
first="yes"
args=""      
while getopts "hZ:n:s:x:a:NrCuUmM1qvd:D:ESt:o" flag
do
    case $flag in
        h) echo "Usage: db2ldif [-Z serverID] {-n backend_instance}* | {-s includesuffix}*"
            echo "               [{-x excludesuffix}*] [-a outputfile]"
            echo "               [-N] [-r] [-C] [-u] [-U] [-m] [-M] [-1] [-q]"
            echo "Note: either \"-n backend_instance\" or \"-s includesuffix\" is required."
            exit 0;;
        Z) servid=$OPTARG;; 
        n) benameopt="-n $OPTARG"
           required_param="yes";;
        s) includeSuffix="-s $OPTARG"
           required_param="yes";;
        x) excludeSuffix="-x $OPTARG";;
        a) outputFile="-a $OPTARG";;
        d) outputFile="-d $OPTARG";;
        t) outputFile="-t $OPTARG";;
        D) args=$args" -D $OPTARG";;
        N) args=$args" -N";;
        E) args=$args" -E";;
        S) args=$args" -S";;
        v) args=$args" -v";;
        r) args=$args" -r";;
        C) args=$args" -C";;
        u) args=$args" -u";;
        U) args=$args" -U";;
        m) args=$args" -m";;
        M) args=$args" -M";;
        1) args=$args" -1";;
        q) args=$args" -q";;        
        ?) echo "Usage: db2ldif [-Z serverID] {-n backend_instance}* | {-s includesuffix}*"
            echo "               [{-x excludesuffix}*] [-a outputfile]"
            echo "               [-N] [-r] [-C] [-u] [-U] [-m] [-M] [-1] [-q]"
            echo "Note: either \"-n backend_instance\" or \"-s includesuffix\" is required."
            exit 1;;
    esac
done

if [ "$required_param" != "yes" ]
then
    echo "Usage: db2ldif [-Z serverID] {-n backend_instance}* | {-s includesuffix}*"
    echo "               [{-x excludesuffix}*] [-a outputfile]"
    echo "               [-N] [-r] [-C] [-u] [-U] [-m] [-M] [-1] [-q]"
    echo "Note: either \"-n backend_instance\" or \"-s includesuffix\" is required."
    exit 1
fi

# server id not provided, check if there is only one instance
inst_count=0
for i in `ls $prefix/etc/sysconfig/dirsrv-* 2>/dev/null`
do
    if [ $i != '$prefix/etc/sysconfig/dirsrv-admin' ]
    then
        inst_count=`expr $inst_count + 1`
        id=$(expr "$i" : ".*dirsrv-\([^)]*\).*")
        if  [ $first == "yes" ]
        then
            instances=$id
            first="no"
        else
            instances=$instances", $id"
        fi
        name=$id
    fi
done
    
if [ -z $servid ]
then
    if [ $inst_count -eq 1 ]
    then
        servid=$name
    else 
        # error
        echo "Usage: db2ldif [-Z serverID] {-n backend_instance}* | {-s includesuffix}*"
        echo "               [{-x excludesuffix}*] [-a outputfile]"
        echo "               [-N] [-r] [-C] [-u] [-U] [-m] [-M] [-1] [-q]"
        echo "You must supply a server instance identifier.  Use -Z to specify instance name"
        echo "Available instances: $instances"
        exit 1
    fi
elif [ $servid == slapd-* ]
then
    servid=`echo "$servid" | sed -e 's/slapd-//'`
elif [ $servid == dirsrv-* ]
then
    servid=`echo "$servid" | sed -e 's/dirsrv-//'`
fi
configdir="$prefix/etc/dirsrv/slapd-$servid"
if ! [ -a $configdir ]
then
    echo "Invalid server identifier: $servid"
    echo "Available instances: $instances"
    exit 1
fi

ldif_file=`make_ldiffile $@`
rn=$?

echo "Exported ldif file: $ldif_file"
if [ $rn -eq 1 ]
then
./ns-slapd db2ldif -D $configdir $benameopt $includeSuffix $excludeSuffix $outputFile $args
else
./ns-slapd db2ldif -D $configdir $benameopt $includeSuffix $excludeSuffix -a $ldif_file $args
fi
