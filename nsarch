#! /bin/sh
#
# BEGIN COPYRIGHT BLOCK
# This Program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; version 2 of the License.
# 
# This Program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with
# this Program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA 02111-1307 USA.
# 
# In addition, as a special exception, Red Hat, Inc. gives You the additional
# right to link the code of this Program with code not covered under the GNU
# General Public License ("Non-GPL Code") and to distribute linked combinations
# including the two, subject to the limitations in this paragraph. Non-GPL Code
# permitted under this exception must only link to the code of this Program
# through those well defined interfaces identified in the file named EXCEPTION
# found in the source code files (the "Approved Interfaces"). The files of
# Non-GPL Code may instantiate templates or use macros or inline functions from
# the Approved Interfaces without causing the resulting work to be covered by
# the GNU General Public License. Only Red Hat, Inc. may make changes or
# additions to the list of Approved Interfaces. You must obey the GNU General
# Public License in all respects for all of the Program code and other code used
# in conjunction with the Program except the Non-GPL Code covered by this
# exception. If you modify this file, you may extend this exception to your
# version of the file, but you are not obligated to do so. If you do not wish to
# provide this exception without modification, you must delete this exception
# statement from your version and license this file solely under the GPL without
# exception. 
# 
# 
# Copyright (C) 2001 Sun Microsystems, Inc. Used by permission.
# Copyright (C) 2005 Red Hat, Inc.
# All rights reserved.
# END COPYRIGHT BLOCK
#
#
# Name:         nsarch
#
# Description:  this file determines the system name and outputs the
#               platform information in a format used by build
#               scripts and utilities; this file is based on the GNU
#               "config.guess" utility; the GNU copyleft is provided
#               somewhere below...
#
#    We need to provide the following definitions:
#
# Variable           Description
# --------           -----------
# NS_NAME:        one word, all upper case system name usually from uname -s that
#                 can be used for Makefiles and #defines
#
# NS_RELEASE:     release number of the OS; if there's a trademark name (like UnixWare),
#                 then this is typically the release number of the marketing name
#                 (like UnixWare 2.1) rather than the version of generic Unix it is
#                 based on (like System V r4.2)
#                 this number comes generally from uname -r, but on some systems
#                 we need to use uname -v
#
# NS_PRETTY_NAME: one word, mixed case system name similar to NS_NAME, but useful
#                 for scripts that output something for users to see
#--------------------------------------------------------------------------
# GNU's copyleft for "configure.guess"
#
# Attempt to guess a canonical system name.
#   Copyright (C) 1992, 93, 94, 95, 1996 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# As a special exception to the GNU General Public License, if you
# distribute this file as part of a program that contains a
# configuration script generated by Autoconf, you may include it under
# the same distribution terms that you use for the rest of that program.

# Written by Per Bothner <bothner@cygnus.com>.
# The master version of this file is at the FSF in /home/gd/gnu/lib.
#
# This script attempts to guess a canonical system name similar to
# config.sub.  If it succeeds, it prints the system name on stdout, and
# exits with 0.  Otherwise, it exits with 1.
#
# The plan is that this can be called by configure scripts if you
# don't specify an explicit system type (host/target name).
#
# Only a few systems have been added to this list; please add others
# (but try to keep the structure clean).
#

#--------------------------------------------------------------------------
# shell functions
output_format='standard'
divider=''
pretty=0

usage(){
   echo "Usage: $0 [ [-full {-under | -dash | -none} {-pretty} ] | -gnu ]"
   echo
   echo "    <no args>               Default to output OS name only; suitable for use"
   echo "                            in makefiles and compiler defines"
   echo "    -f, -full, --full)      Full output includes OS name and release number"
   echo "    -d, -dash, --dash)      use with -f to specify a dash separator"
   echo "    -u, -under, --under)    use with -f to specify a underscore separator"
   echo "    -n, -none, --none)      use with -f to specify no separator"
   echo "    -p, -pretty, --pretty)  Print prettier mixed case version of OS name"
   echo "    -g, -gnu, --gnu)        GNU-style: <chip_arch>-<vendor>-<os_release>"
   echo "    -h, -help, --help)      Print this usage message"
   echo; echo
}

get_opt(){
   ARGS=$*
   cntr=0
   while [ $cntr -lt $# ]
   do
     case $1 in
       -h|-help|--help)      usage
                             exit 0;;
       -f|-full|--full)      output_format="full";;
       -d|-dash|--dash)      divider="dash";;
       -u|-under|--under)    divider="underscore";;
       -n|-none|--none)      divider="none";;
       -p|-pretty|--pretty)  pretty=1;;
       -g|-gnu|--gnu)        output_format="gnu";;
       *)                    echo "Error: unknown argument: $1"; echo
                             usage
                             exit 1;;
     esac
     shift
   done
}

ns_printf(){
   # handle the case where we didn't set NS_NAME
   if [ -z "${NS_NAME}" ]; then
     NS_NAME="${UNAME_SYSTEM}"
   fi

   # handle the case where we don't have a pretty name
   if [ -z "${NS_PRETTY_NAME}" ]; then
     NS_PRETTY_NAME="${NS_NAME}"
   fi

   # determine which output format to use
   case ${output_format} in
     'standard')
                    if [ $pretty -eq 1 ]; then
                      echo ${NS_PRETTY_NAME}
                    else
                      echo ${NS_NAME}
                    fi;;
     'full')
                    if [ $pretty -eq 1 ]; then
                      case "$divider" in
                        'dash')       echo ${NS_PRETTY_NAME} ${NS_RELEASE} | sed -e 's/ /-/';;
                        'underscore') echo ${NS_PRETTY_NAME} ${NS_RELEASE} | sed -e 's/ /_/';;
                        'none')       echo ${NS_PRETTY_NAME} ${NS_RELEASE} | sed -e 's/ //';;
                        *)            echo ${NS_PRETTY_NAME} ${NS_RELEASE};;
                      esac
                    else
                      # since we're outputing full, we don't need the redundant "4"
                      # in the ${NS_NAME}
                      if [ ${NS_NAME} = "SUNOS4" ]; then
                        NS_NAME="SUNOS"
                      fi
                      case "$divider" in
                        'dash')       echo ${NS_NAME} ${NS_RELEASE} | sed -e 's/ /-/';;
                        'underscore') echo ${NS_NAME} ${NS_RELEASE} | sed -e 's/ /_/';;
                        'none')       echo ${NS_NAME} ${NS_RELEASE} | sed -e 's/ //';;
                        *)            echo ${NS_NAME} ${NS_RELEASE};;
                      esac
                    fi;;
     'gnu')             echo ${GNU_NAME};;
   esac
}


#--------------------------------------------------------------------------
# main - get the arguments and start running
get_opt $*

#--------------------------------------------------------------------------
# everything that follows is GNU's config.guess slightly modified locally

# NT doesn't have /dev/null
#UNAME_MACHINE=`(uname -m) 2> /dev/null` || UNAME_MACHINE=unknown
#UNAME_RELEASE=`(uname -r) 2> /dev/null` || UNAME_RELEASE=unknown
#UNAME_SYSTEM=`(uname -s) 2> /dev/null` || UNAME_SYSTEM=unknown
#UNAME_VERSION=`(uname -v) 2> /dev/null` || UNAME_VERSION=unknown

UNAME_MACHINE=`(uname -m)` || UNAME_MACHINE=unknown
UNAME_RELEASE=`(uname -r)` || UNAME_RELEASE=unknown
UNAME_SYSTEM=`(uname -s)` || UNAME_SYSTEM=unknown
UNAME_VERSION=`(uname -v)` || UNAME_VERSION=unknown

trap 'rm -f dummy.c dummy.o dummy; exit 1' 1 2 15

# Note: order is significant - the case branches are not exclusive.

case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
    alpha:OSF1:*:*)
	# A Vn.n version is a released version.
	# A Tn.n version is a released field test version.
	# A Xn.n version is an unreleased experimental baselevel.
	# 1.2 uses "1.2" for uname -r.
	#echo alpha-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//'`
	GNU_NAME="alpha-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//'`"
        NS_NAME="${UNAME_SYSTEM}"
        NS_RELEASE="`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//'`"
        ns_printf
	exit 0 ;;
    21064:Windows_NT:50:3)
	#echo alpha-dec-winnt3.5
        GNU_NAME="alpha-dec-winnt3.5"
        NS_NAME="WINNT"
        NS_RELEASE="${UNAME_RELEASE}"
        ns_printf
	exit 0 ;;
    Amiga*:UNIX_System_V:4.0:*)
	echo m68k-cbm-sysv4
	exit 0;;
    amiga:NetBSD:*:*)
      echo m68k-cbm-netbsd${UNAME_RELEASE}
      exit 0 ;;
    amiga:OpenBSD:*:*)
      echo m68k-cbm-openbsd${UNAME_RELEASE}
      exit 0 ;;
    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)
	echo arm-acorn-riscix${UNAME_RELEASE}
	exit 0;;
    Pyramid*:OSx*:*:*)
	if test "`(/bin/universe) 2>/dev/null`" = att ; then
		#echo pyramid-pyramid-sysv3
		GNU_NAME="pyramid-pyramid-sysv3"
	else
		#echo pyramid-pyramid-bsd
		GNU_NAME="pyramid-pyramid-bsd"
	fi
        ns_printf
	exit 0 ;;
    sun4*:SunOS:5.*:*)
	#echo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
	GNU_NAME="sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`"
        NS_NAME="SOLARIS"
        NS_PRETTY_NAME="Solaris"
        NS_RELEASE="`echo ${UNAME_RELEASE}|sed -e 's/[^.]*/2/'`"
        ns_printf
	exit 0 ;;
    i86pc:SunOS:5.*:*)
	#echo i386-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
        GNU_NAME="i386-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`"
        NS_NAME="SOLARISx86"
        NS_PRETTY_NAME="Solaris-x86"
        NS_RELEASE="`echo ${UNAME_RELEASE}|sed -e 's/[^.]*/2/'`"
        ns_printf
	exit 0 ;;
    sun4*:SunOS:6*:*)
	# According to config.sub, this is the proper way to canonicalize
	# SunOS6.  Hard to guess exactly what SunOS6 will be like, but
	# it's likely to be more like Solaris than SunOS4.
	#echo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
	GNU_NAME="sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`"
        ns_printf
	exit 0 ;;
    sun4*:SunOS:*:*)
	case "`/usr/bin/arch -k`" in
	    Series*|S4*)
		UNAME_RELEASE=`uname -v`
		;;
	esac
	# Japanese Language versions have a version number like `4.1.3-JL'.
	#echo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`
	GNU_NAME="sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`"
        NS_NAME="SUNOS4"
        NS_PRETTY_NAME="SunOS"
        NS_RELEASE="${UNAME_RELEASE}"
        ns_printf
	exit 0 ;;
    sun3*:SunOS:*:*)
	echo m68k-sun-sunos${UNAME_RELEASE}
	exit 0 ;;
    atari*:NetBSD:*:*)
	echo m68k-atari-netbsd${UNAME_RELEASE}
	exit 0 ;;
    atari*:OpenBSD:*:*)
	echo m68k-atari-openbsd${UNAME_RELEASE}
	exit 0 ;;
    sun3*:NetBSD:*:*)
	echo m68k-sun-netbsd${UNAME_RELEASE}
	exit 0 ;;
    sun3*:OpenBSD:*:*)
	echo m68k-sun-openbsd${UNAME_RELEASE}
	exit 0 ;;
    mac68k:NetBSD:*:*)
	echo m68k-apple-netbsd${UNAME_RELEASE}
	exit 0 ;;
    mac68k:OpenBSD:*:*)
	echo m68k-apple-openbsd${UNAME_RELEASE}
	exit 0 ;;
    RISC*:ULTRIX:*:*)
	#echo mips-dec-ultrix${UNAME_RELEASE}
	GNU_NAME="mips-dec-ultrix${UNAME_RELEASE}"
        ns_printf
	exit 0 ;;
    VAX*:ULTRIX*:*:*)
	#echo vax-dec-ultrix${UNAME_RELEASE}
	GNU_NAME="vax-dec-ultrix${UNAME_RELEASE}"
        ns_printf
	exit 0 ;;
    mips:*:4*:UMIPS)
	echo mips-mips-riscos4sysv
	exit 0 ;;
    mips:*:5*:RISCos)
	echo mips-mips-riscos${UNAME_RELEASE}
	exit 0 ;;
    Night_Hawk:Power_UNIX:*:*)
	echo powerpc-harris-powerunix
	exit 0 ;;
    m88k:CX/UX:7*:*)
	echo m88k-harris-cxux7
	exit 0 ;;
    m88k:*:4*:R4*)
	echo m88k-motorola-sysv4
	exit 0 ;;
    m88k:*:3*:R3*)
	echo m88k-motorola-sysv3
	exit 0 ;;
    AViiON:dgux:*:*)
        # DG/UX returns AViiON for all architectures
        UNAME_PROCESSOR=`/usr/bin/uname -p`
        if [ $UNAME_PROCESSOR = mc88100 -o $UNAME_PROCESSOR = mc88100 ] ; then
          if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx \
           -o ${TARGET_BINARY_INTERFACE}x = x ] ; then
            #echo m88k-dg-dgux${UNAME_RELEASE}
            GNU_NAME="m88k-dg-dgux${UNAME_RELEASE}"
          else
            #echo m88k-dg-dguxbcs${UNAME_RELEASE}
            GNU_NAME="m88k-dg-dguxbcs${UNAME_RELEASE}"
          fi
        else
          #echo i586-dg-dgux${UNAME_RELEASE}
          GNU_NAME="i586-dg-dgux${UNAME_RELEASE}"
        fi
        ns_printf
 	exit 0 ;;
    M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
	echo m88k-dolphin-sysv3
	exit 0 ;;
    M88*:*:R3*:*)
	# Delta 88k system running SVR3
	echo m88k-motorola-sysv3
	exit 0 ;;
    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)
	echo m88k-tektronix-sysv3
	exit 0 ;;
    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)
	echo m68k-tektronix-bsd
	exit 0 ;;
    *:IRIX*:*:*)
	#echo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`
	GNU_NAME="mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`"
        NS_NAME="IRIX"
        NS_RELEASE="`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`"
        ns_printf
	exit 0 ;;
   ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
	echo romp-ibm-aix      # uname -m gives an 8 hex-code CPU id
	exit 0 ;;              # Note that: echo "'`uname -s`'" gives 'AIX '
    i[34]86:AIX:*)
	echo i386-ibm-aix
	exit 0 ;;
    *:AIX:2:3)
	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
                # commenting out this test program - unable to execute
                # cc on some machines...
		#sed 's/^		//' << EOF >dummy.c
		##include <sys/systemcfg.h>
                #
		#main()
		#	{
		#	if (!__power_pc())
		#		exit(1);
		#	puts("powerpc-ibm-aix3.2.5");
		#	exit(0);
		#	}
#EOF
		#${CC-cc} dummy.c -o dummy && ./dummy && rm dummy.c dummy && exit 0
		#rm -f dummy.c dummy
		#echo rs6000-ibm-aix3.2.5
		GNU_NAME="rs6000-ibm-aix3.2.5"
                NS_RELEASE="3.2.5"
	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
		#echo rs6000-ibm-aix3.2.4
		GNU_NAME="rs6000-ibm-aix3.2.4"
		NS_RELEASE="3.2.4"
	else
		#echo rs6000-ibm-aix3.2
		GNU_NAME="rs6000-ibm-aix3.2"
		NS_RELEASE="3.2"
	fi
        ns_printf
	exit 0 ;;
    *:AIX:*:4)
	if /usr/sbin/lsattr -EHl proc0 | grep POWER >/dev/null 2>&1; then
		IBM_ARCH=rs6000
	else
		IBM_ARCH=powerpc
	fi
	if [ -x /usr/bin/oslevel ] ; then
		IBM_REV=`/usr/bin/oslevel`
	else
		IBM_REV=4.${UNAME_RELEASE}
	fi
	#echo ${IBM_ARCH}-ibm-aix${IBM_REV}
	GNU_NAME="${IBM_ARCH}-ibm-aix${IBM_REV}"
        NS_RELEASE="${IBM_REV}"
        ns_printf
	exit 0 ;;
    *:AIX:*:*)
	#echo rs6000-ibm-aix
	GNU_NAME="rs6000-ibm-aix"
        ns_printf
	exit 0 ;;
    ibmrt:4.4BSD:*|romp-ibm:BSD:*)
	echo romp-ibm-bsd4.4
	exit 0 ;;
    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC NetBSD and
	echo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to 
	exit 0 ;;                           # report: romp-ibm BSD 4.3
    *:BOSX:*:*)
	echo rs6000-bull-bosx
	exit 0 ;;
    DPX/2?00:B.O.S.:*:*)
	echo m68k-bull-sysv3
	exit 0 ;;
    9000/[34]??:4.3bsd:1.*:*)
	echo m68k-hp-bsd
	exit 0 ;;
    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
	echo m68k-hp-bsd4.4
	exit 0 ;;
    9000/[3478]??:HP-UX:*:*)
	case "${UNAME_MACHINE}" in
	    9000/31? )            HP_ARCH=m68000 ;;
	    9000/[34]?? )         HP_ARCH=m68k ;;
	    9000/7?? | 9000/8?[679] ) HP_ARCH=hppa1.1 ;;
	    9000/8?? )            HP_ARCH=hppa1.0 ;;
	esac
	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
	#echo ${HP_ARCH}-hp-hpux${HPUX_REV}
	GNU_NAME="${HP_ARCH}-hp-hpux${HPUX_REV}"
        NS_NAME="HPUX"
        NS_PRETTY_NAME="HP-UX"
        NS_RELEASE="${HPUX_REV}"
        ns_printf
	exit 0 ;;
    ia64:HP-UX:*:*)
	HP_ARCH=hpia
	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
	GNU_NAME="${HP_ARCH}-hp-hpux${HPUX_REV}"
	NS_NAME="HPUX"
	NS_PRETTY_NAME="HP-UX"
	NS_RELEASE="${HPUX_REV}"
	ns_printf
	exit 0 ;;
    3050*:HI-UX:*:*)
	sed 's/^	//' << EOF >dummy.c
	#include <unistd.h>
	int
	main ()
	{
	  long cpu = sysconf (_SC_CPU_VERSION);
	  /* The order matters, because CPU_IS_HP_MC68K erroneously returns
	     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct
	     results, however.  */
	  if (CPU_IS_PA_RISC (cpu))
	    {
	      switch (cpu)
		{
		  case CPU_PA_RISC1_0: puts ("hppa1.0-hitachi-hiuxwe2"); break;
		  case CPU_PA_RISC1_1: puts ("hppa1.1-hitachi-hiuxwe2"); break;
		  case CPU_PA_RISC2_0: puts ("hppa2.0-hitachi-hiuxwe2"); break;
		  default: puts ("hppa-hitachi-hiuxwe2"); break;
		}
	    }
	  else if (CPU_IS_HP_MC68K (cpu))
	    puts ("m68k-hitachi-hiuxwe2");
	  else puts ("unknown-hitachi-hiuxwe2");
	  exit (0);
	}
EOF
	${CC-cc} dummy.c -o dummy && ./dummy && rm dummy.c dummy && exit 0
	rm -f dummy.c dummy
	echo unknown-hitachi-hiuxwe2
	exit 0 ;;
    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
	echo hppa1.1-hp-bsd
	exit 0 ;;
    9000/8??:4.3bsd:*:*)
	echo hppa1.0-hp-bsd
	exit 0 ;;
    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )
	echo hppa1.1-hp-osf
	exit 0 ;;
    hp8??:OSF1:*:*)
	echo hppa1.0-hp-osf
	exit 0 ;;
    parisc*:Lites*:*:*)
	echo hppa1.1-hp-lites
	exit 0 ;;
    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)
	echo c1-convex-bsd
        exit 0 ;;
    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)
	if getsysinfo -f scalar_acc
	then echo c32-convex-bsd
	else echo c2-convex-bsd
	fi
        exit 0 ;;
    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)
	echo c34-convex-bsd
        exit 0 ;;
    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)
	echo c38-convex-bsd
        exit 0 ;;
    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)
	echo c4-convex-bsd
        exit 0 ;;
    CRAY*X-MP:*:*:*)
	echo xmp-cray-unicos
        exit 0 ;;
    CRAY*Y-MP:*:*:*)
	echo ymp-cray-unicos${UNAME_RELEASE}
	exit 0 ;;
    CRAY*C90:*:*:*)
	echo c90-cray-unicos${UNAME_RELEASE}
	exit 0 ;;
    CRAY-2:*:*:*)
	echo cray2-cray-unicos
        exit 0 ;;
    hp3[0-9][05]:NetBSD:*:*)
	echo m68k-hp-netbsd${UNAME_RELEASE}
	exit 0 ;;
    hp3[0-9][05]:OpenBSD:*:*)
	echo m68k-hp-openbsd${UNAME_RELEASE}
	exit 0 ;;
    i[34]86:BSD/386:*:* | *:BSD/OS:*:*)
	#echo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}
        GNU_NAME="${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}"
        NS_NAME="BSDI"
        NS_PRETTY_NAME="BSDI"
        NS_RELEASE="${UNAME_RELEASE}"
        ns_printf
	exit 0 ;;
    *:FreeBSD:*:*)
	echo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
	exit 0 ;;
    *:NetBSD:*:*)
	echo ${UNAME_MACHINE}-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
	exit 0 ;;
    *:OpenBSD:*:*)
	echo ${UNAME_MACHINE}-unknown-openbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
	exit 0 ;;
    i*:CYGWIN*:*)
	#echo i386-unknown-cygwin32
        GNU_NAME="i386-unknown-cygwin32"
        NS_NAME="WINNT"
        NS_PRETTY_NAME="WinNT"
        NS_RELEASE="${UNAME_RELEASE}"
        ns_printf
	exit 0 ;;
    p*:CYGWIN*:*)
	echo powerpcle-unknown-cygwin32
	exit 0 ;;
    prep*:SunOS:5.*:*)
	echo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
	exit 0 ;;
    *:GNU:*:*)
	echo `echo ${UNAME_MACHINE}|sed -e 's,/.*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`
	exit 0 ;;
    *:Linux:*:*)
	# The BFD linker knows what the default object file format is, so
	# first see if it will tell us.
	ld_help_string=`ld --help 2>&1`
	if echo "$ld_help_string" | grep >/dev/null 2>&1 "supported emulations: elf_i[345]86"; then
	  #echo "${UNAME_MACHINE}-unknown-linux" ; exit 0
	  GNU_NAME="${UNAME_MACHINE}-unknown-linux"
          NS_NAME="${UNAME_SYSTEM}"
          NS_RELEASE="${UNAME_RELEASE}"
	  if echo "$NS_RELEASE" | grep >/dev/null 2>&1 "2.0."; then
		NS_RELEASE="2.0"
	  fi
          ns_printf
          exit 0
	elif echo "$ld_help_string" | grep >/dev/null 2>&1 "supported emulations: elf_x86_64"; then
	  #echo "${UNAME_MACHINE}-unknown-linux" ; exit 0
	  GNU_NAME="${UNAME_MACHINE}-unknown-linux"
          NS_NAME="${UNAME_SYSTEM}"
          NS_RELEASE="${UNAME_RELEASE}"
	  if echo "$NS_RELEASE" | grep >/dev/null 2>&1 "2.0."; then
		NS_RELEASE="2.0"
	  fi
          ns_printf
          exit 0
	elif echo "$ld_help_string" | grep >/dev/null 2>&1 "supported emulations: i[345]86linux"; then
	  #echo "${UNAME_MACHINE}-unknown-linuxaout" ; exit 0
	  GNU_NAME="${UNAME_MACHINE}-unknown-linuxaout"
          NS_NAME="${UNAME_SYSTEM}"
          NS_RELEASE="${UNAME_RELEASE}"
          ns_printf
          exit 0
	elif echo "$ld_help_string" | grep >/dev/null 2>&1 "supported emulations: i[345]86coff"; then
	  #echo "${UNAME_MACHINE}-unknown-linuxcoff" ; exit 0
	  GNU_NAME="${UNAME_MACHINE}-unknown-linuxcoff"
          NS_NAME="${UNAME_SYSTEM}"
          NS_RELEASE="${UNAME_RELEASE}"
          ns_printf
          exit 0
	elif echo "$ld_help_string" | grep >/dev/null 2>&1 "supported emulations: m68kelf"; then
	  #echo "${UNAME_MACHINE}-unknown-linux" ; exit 0
	  GNU_NAME="${UNAME_MACHINE}-unknown-linux"
          NS_NAME="${UNAME_SYSTEM}"
          NS_RELEASE="${UNAME_RELEASE}"
          ns_printf
          exit 0
	elif echo "$ld_help_string" | grep >/dev/null 2>&1 "supported emulations: m68klinux"; then
	  #echo "${UNAME_MACHINE}-unknown-linuxaout" ; exit 0
	  GNU_NAME="${UNAME_MACHINE}-unknown-linuxaout"
          NS_NAME="${UNAME_SYSTEM}"
          NS_RELEASE="${UNAME_RELEASE}"
          ns_printf
          exit 0
	elif test "${UNAME_MACHINE}" = "alpha" ; then
	  #echo alpha-unknown-linux ; exit 0
	  GNU_NAME="alpha-unknown-linux"
          NS_NAME="${UNAME_SYSTEM}"
          NS_RELEASE="${UNAME_RELEASE}"
          ns_printf
          exit 0
	else
	  # Either a pre-BFD a.out linker (linuxoldld) or one that does not give us
	  # useful --help.  Gcc wants to distinguish between linuxoldld and linuxaout.
	  test ! -d /usr/lib/ldscripts/. \
	    && echo "${UNAME_MACHINE}-unknown-linuxoldld" && exit 0
	  # Determine whether the default compiler is a.out or elf
	  cat >dummy.c <<EOF
main(argc, argv)
int argc;
char *argv[];
{
#ifdef __ELF__
  printf ("%s-unknown-linux\n", argv[1]);
#else
  printf ("%s-unknown-linuxaout\n", argv[1]);
#endif
  return 0;
}
EOF
	  ${CC-cc} dummy.c -o dummy 2>/dev/null && ./dummy "${UNAME_MACHINE}" && rm dummy.c dummy && exit 0
	  rm -f dummy.c dummy
	fi ;;
# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.  earlier versions
# are messed up and put the nodename in both sysname and nodename.
    i[34]86:DYNIX/ptx:4*:*)
	echo i386-sequent-sysv4
	exit 0 ;;
    i[34]86:*:4.*:* | i[34]86:SYSTEM_V:4.*:*)
	#if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
	#echo ${UNAME_MACHINE}-unixware-sysv${UNAME_RELEASE}
      if grep SCO /usr/include/sco_values.h >/dev/null 2>/dev/null; then
          #echo ${UNAME_MACHINE}-unknown-unixware${UNAME_VERSION}
            # check for UDK, which is like building on Gemini
          # assumes correct "cc" is first in PATH
            if cc -V 2>&1 | grep "CCS. 3.2" >/dev/null 2>/dev/null; then
                NS_NAME="UnixWare"
                NS_RELEASE="5"
            else
                NS_NAME="UNIXWARE"
                NS_RELEASE="${UNAME_VERSION}"
            fi
            GNU_NAME="${UNAME_MACHINE}-unknown-unixware${UNAME_VERSION}"
            NS_PRETTY_NAME="UnixWare"
          ns_printf
      else
          echo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}
      fi
      exit 0 ;;
    i[34]86:UnixWare:5*:*)
        GNU_NAME="${UNAME_MACHINE}-unknown-unixware${UNAME_VERSION}"
        NS_NAME="UnixWare"
        NS_PRETTY_NAME="UnixWare"
        NS_RELEASE="${UNAME_VERSION}"
        ns_printf
        exit 0 ;;
    i[34]86:SCO_SV:3.2:*)
        if /bin/uname -X 2>/dev/null >/dev/null ; then
          UNAME_REL=`(/bin/uname -X|egrep Release|sed -e 's/.*= //')`
          (/bin/uname -X|egrep i80486 >/dev/null) && UNAME_MACHINE=i486
          (/bin/uname -X|egrep '^Machine.*Pentium' >/dev/null) \
           && UNAME_MACHINE=i586
          GNU_NAME="${UNAME_MACHINE}-unknown-sco`echo $UNAME_REL|sed -e 's/.*v//`"
          NS_NAME="SCO"
          NS_PRETTY_NAME="SCO"
          NS_RELEASE="`echo $UNAME_REL|sed -e 's/.*v//`"
          ns_printf
        fi
        exit 0 ;;
    i[34]86:*:3.2:*)
	if test -f /usr/options/cb.name; then
		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
		echo ${UNAME_MACHINE}-unknown-isc$UNAME_REL
	elif /bin/uname -X 2>/dev/null >/dev/null ; then
		UNAME_REL=`(/bin/uname -X|egrep Release|sed -e 's/.*= //')`
		(/bin/uname -X|egrep i80486 >/dev/null) && UNAME_MACHINE=i486
		(/bin/uname -X|egrep '^Machine.*Pentium' >/dev/null) \
			&& UNAME_MACHINE=i586
		#echo ${UNAME_MACHINE}-unknown-sco$UNAME_REL
                GNU_NAME="${UNAME_MACHINE}-unknown-sco${UNAME_REL}"
                NS_NAME="SCO"
                NS_PRETTY_NAME="SCO"
                NS_RELEASE="${UNAME_RELEASE}"
                ns_printf
	else
		echo ${UNAME_MACHINE}-unknown-sysv32
	fi
	exit 0 ;;
    Intel:Mach:3*:*)
	echo i386-unknown-mach3
	exit 0 ;;
    paragon:*:*:*)
	echo i860-intel-osf1
	exit 0 ;;
    i860:*:4.*:*) # i860-SVR4
	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4
	else # Add other i860-SVR4 vendors below as they are discovered.
	  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4
	fi
	exit 0 ;;
    mini*:CTIX:SYS*5:*)
	# "miniframe"
	echo m68010-convergent-sysv
	exit 0 ;;
    M680[234]0:*:R3V[567]*:*)
	test -r /sysV68 && echo 'm68k-motorola-sysv' && exit 0 ;;
    3[34]??:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0)
        uname -p 2>/dev/null | grep 86 >/dev/null \
          && echo i486-ncr-sysv4.3 && exit 0 ;;
    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
        uname -p 2>/dev/null | grep 86 >/dev/null \
          && echo i486-ncr-sysv4 && exit 0 ;;
    3[34]??/3[34]??:*:4.0:* | 3[34]??/3[34]??,*:*:4.0:*)
        #uname -p 2>/dev/null | grep Pentium >/dev/null \
        #  && echo i586-ncr-sysv4 && exit 0 ;;
        uname -p 2>/dev/null | grep Pentium >/dev/null
        if [ "$?" -eq 0 ]; then
          GNU_NAME="i586-ncr-sysv${UNAME_RELEASE}"
          NS_NAME="NCR"
          NS_RELEASE="${UNAME_VERSION}"
          ns_printf
        else
          GNU_NAME="unknown-ncr-sysv${UNAME_RELEASE}"
          NS_NAME="NCR"
          NS_RELEASE="${UNAME_VERSION}"
          ns_printf
        fi
        exit 0 ;;
    m680[234]0:LynxOS:2.[23]*:*)
	echo m68k-lynx-lynxos${UNAME_RELEASE}
	exit 0 ;;
    mc68030:UNIX_System_V:4.*:*)
	echo m68k-atari-sysv4
	exit 0 ;;
    i[34]86:LynxOS:2.[23]*:*)
	echo i386-lynx-lynxos${UNAME_RELEASE}
	exit 0 ;;
    TSUNAMI:LynxOS:2.[23]*:*)
	echo sparc-lynx-lynxos${UNAME_RELEASE}
	exit 0 ;;
    rs6000:LynxOS:2.[23]*:*)
	echo rs6000-lynx-lynxos${UNAME_RELEASE}
	exit 0 ;;
    RM*:SINIX-*:*:*)
	#echo mips-sni-sysv4
        GNU_NAME="mips-sni-sysv4"
        NS_NAME="ReliantUNIX"
        NS_PRETTY_NAME="Sinix"
        NS_RELEASE="${UNAME_RELEASE}"
        ns_printf
	exit 0 ;;
    *:SINIX-*:*:*)
	if uname -p 2>/dev/null >/dev/null ; then
		UNAME_MACHINE=`(uname -p) 2>/dev/null`
		#echo ${UNAME_MACHINE}-sni-sysv4
		GNU_NAME="${UNAME_MACHINE}-sni-sysv4"
	else
		#echo ns32k-sni-sysv
		GNU_NAME="ns32k-sni-sysv"
	fi
        ns_printf
	exit 0 ;;
    mc68*:A/UX:*:*)
	echo m68k-apple-aux${UNAME_RELEASE}
	exit 0 ;;
    R?000:*System_V*:*:*)
	if [ -d /usr/nec ]; then
	        #echo mips-nec-sysv${UNAME_RELEASE}
                GNU_NAME="mips-nec-sysv${UNAME_RELEASE}"
                NS_NAME="NEC"
                NS_RELEASE="${UNAME_RELEASE}"
                ns_printf
	else
	        echo mips-unknown-sysv${UNAME_RELEASE}
	fi
        exit 0 ;;
    *:NEWS-OS:*:*)
        GNU_NAME="mips-sony-newsos"
        NS_NAME="SONY"
        NS_RELEASE="${UNAME_RELEASE}"
	exit 0 ;;
    *86:Windows_NT:4*:*)
        GNU_NAME="x86-unknown-winnt4"
        NS_NAME="WINNT"
        NS_PRETTY_NAME="WinNT"
        NS_RELEASE="${UNAME_RELEASE}"
        ns_printf
	exit 0 ;;
    *:WINNT:4*:*)
        GNU_NAME="x86-unknown-winnt4"
        NS_NAME="WINNT"
        NS_PRETTY_NAME="WinNT"
        NS_RELEASE="${UNAME_RELEASE}"
        ns_printf
	exit 0 ;;
    *:WINNT:*:*)
        GNU_NAME="x86-unknown-winnt"
        NS_NAME="WINNT"
        NS_PRETTY_NAME="WinNT"
        NS_RELEASE="${UNAME_RELEASE}"
        ns_printf
	exit 0 ;;
esac

echo '(Unable to guess system type)' 1>&2

exit 1
