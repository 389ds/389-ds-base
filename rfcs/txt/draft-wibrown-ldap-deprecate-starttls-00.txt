



Internet Engineering Task Force                               W.B. Brown
Internet-Draft                 SUSE SOFTWARE SOLUTIONS AUSTRALIA PTY LTD
Intended status: Standards Track                       30 September 2022
Expires: 3 April 2023


                     Draft LDAP Deprecate StartTLS
                     draft-wibrown-ldapssotoken-02

Abstract

   RFC 2830 [RFC2830] describes the deprecation of LDAPS (LDAP over TLS)
   in favour of StartTLS, part of RFC 4511 [RFC4511] LDAP.  However, as
   security research has progressed a number of limitations of StartTLS
   in relation to it's use in LDAP have been discovered.  This document
   describes those limitations and recommends that StartTLS be
   deprecated as insecure for daily operations, and recommends that
   LDAPS is the only secure connection method for LDAP clients and
   servers.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 3 April 2023.

Copyright Notice

   Copyright (c) 2022 IETF Trust and the persons identified as the
   document authors.  All rights reserved.










Brown                     Expires 3 April 2023                  [Page 1]

Internet-Draft           LDAP Deprecate StartTLS          September 2022


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Requirements Language . . . . . . . . . . . . . . . . . . . .   3
   3.  StartTLS Operation  . . . . . . . . . . . . . . . . . . . . .   3
   4.  Possible Flaws in StartTLS Connection Flow  . . . . . . . . .   3
     4.1.  Error Handling or Injection . . . . . . . . . . . . . . .   3
     4.2.  Referral Injection  . . . . . . . . . . . . . . . . . . .   4
     4.3.  Incorrect Client Handling . . . . . . . . . . . . . . . .   6
     4.4.  Configuration Error . . . . . . . . . . . . . . . . . . .   7
   5.  GSSAPI  . . . . . . . . . . . . . . . . . . . . . . . . . . .   7
   6.  Recommendations . . . . . . . . . . . . . . . . . . . . . . .   7
   7.  Related Research  . . . . . . . . . . . . . . . . . . . . . .   7
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   8
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .   8
     8.2.  Informative References  . . . . . . . . . . . . . . . . .   8
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   8

1.  Introduction

   LDAP is a widely used protocol providing identity information to
   clients.  Additionally in many environments LDAP also provides
   authentication and authorisation features.  As these features are
   critical to the security of the connected clients communication
   between the client and server must be protected.  There are three
   major methods to achieve this today.  These are LDAPS, StartTLS and
   GSSAPI.

   LDAPS establishes a connection over TLS (RFC 8446 [RFC8446]) such
   that all communication is encrypted from the first byte of
   transmission.

   StartTLS establishes a plaintext connection to an LDAP server and
   then issues an LDAP StartTLS extended operation.  This extended
   operation then triggers the connection to be upgraded to TLS from
   plaintext.  This TLS connection is established using RFC 8446
   [RFC8446] TLS or similar.





Brown                     Expires 3 April 2023                  [Page 2]

Internet-Draft           LDAP Deprecate StartTLS          September 2022


   GSSAPI (RFC 2078 [RFC2078]) establishes a plaintext connection to an
   LDAP server and then issues a SASL bind.  This SASL bind uses GSSAPI
   for authentication and can then optionally install a security layer
   which provides communication encyrption.

2.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

3.  StartTLS Operation

   StartTLS is described in section 4.14 of RFC 4511 [RFC4511].  On a
   new LDAP connection two messages types are allowed - Bind and
   ExtendedOp.  ExtendedOp is used to initiate the StartTLS Extended
   Operation.  This can be seen in a connection flow as below.

   ┌───────────┐                            ┌───────────┐
   │           │─────────open tcp 389──────▶│           │
   │           │◀────────────ok─────────────│           │
   │           │                            │           │
   │           │                            │           │
   │           │────────ldap starttls──────▶│           │
   │           │◀──────────success──────────│           │
   │           │                            │           │
   │  Client   │                            │  Server   │
   │           │──────tls client hello─────▶│           │
   │           │◀─────tls server hello──────│           │
   │           │────────tls key xchg───────▶│           │
   │           │◀────────tls finish─────────│           │
   │           │                            │           │
   │           │──────TLS(ldap bind)───────▶│           │
   └───────────┘                            └───────────┘

                                  Figure 1

   This connection flow assumes correct behaviour and conditions on the
   client, server and network.

4.  Possible Flaws in StartTLS Connection Flow

4.1.  Error Handling or Injection

   As a StartTLS Extended Operation is a fallible request, it is
   possible to return or inject an error in response.  In these cases it
   is up to the client to handle this error correctly.  RFC 4511
   [RFC4511] states:



Brown                     Expires 3 April 2023                  [Page 3]

Internet-Draft           LDAP Deprecate StartTLS          September 2022


   """If the server is otherwise unwilling or unable to perform this
   operation, the server is to return an appropriate result code
   indicating the nature of the problem."""

   """In cases where a non-success result code is returned, the LDAP
   session is left without a TLS layer."""

   This is a "fail open" design, which would broadly not be considered
   best practice in modern security systems design.  This is because it
   relies on the client to do the right thing rather than a constraint
   being imposed to force correct and secure behaviour.  In practice
   this opens the follow connection flow.

   ┌───────────┐                            ┌───────────┐
   │           │─────────open tcp 389──────▶│           │
   │           │◀────────────ok─────────────│           │
   │           │                            │           │
   │  Client   │                            │  Server   │
   │           │────────ldap starttls──────▶│           │
   │           │◀───────starttls error──────│           │
   │           │                            │           │
   │           │─────────ldap bind─────────▶│           │
   └───────────┘                            └───────────┘

                                  Figure 2

   Note in this connection flow that despite the attempted installation
   of StartTLS, and it's subsequent failure, that the LDAP Bind request
   was able to proceed.  This has allowed the credentials of the account
   to be transmitted in plaintext.  Additionally, defences such as Min
   SSF which enforce a minimum level of connection security for a Bind
   to be processed are only enforced *after* the server recieves the
   Bind message.  This means Min SSF is not an adequate defence for this
   error.

   It has been observed in the wild that a number of popular and widely
   deployed LDAP client tools contain this logic error which allows this
   attack to proceed.  There are equally many clients that correctly
   enforce that the connection is closed on a StartTLS error.

4.2.  Referral Injection

   Referrals allow an LDAP server to redirect to another server which is
   able to service the operation that was provided.  A referral is a
   valid response to any LDAP message.  This allows an alternate method
   to intercept StartTLS connections.





Brown                     Expires 3 April 2023                  [Page 4]

Internet-Draft           LDAP Deprecate StartTLS          September 2022


   There are multiple possible methods to use this to create a scenario
   allowing credential disclosure.  The first is a client that
   recognises the referral but does not then continue to attempt to
   install StartTLS.

   ┌───────────┐                            ┌───────────┐
   │           │─────────open tcp 389──────▶│           │
   │           │◀────────────ok─────────────│           │
   │           │                            │  Server   │
   │           │────────ldap starttls──────▶│           │
   │           │◀──────────referral─────────│           │
   │           │                            └───────────┘
   │  Client   │
   │           │                            ┌───────────┐
   │           │─────────ldap bind─────────▶│           │
   │           │                            │ Malicious │
   │           │                            │  Server   │
   └───────────┘                            └───────────┘

                                  Figure 3

   In this example we can see that the client followed the referral, but
   since it treated the referral as a successful (or non-error) message,
   then the client proceeds to connect to the malicious server and
   disclose credentials to it.

   Some clients are coded such that even on a referral after a StartTLS,
   they continue to attempt to install TLS.  In these cases it is still
   possible to achieve credential disclosure.






















Brown                     Expires 3 April 2023                  [Page 5]

Internet-Draft           LDAP Deprecate StartTLS          September 2022


   ┌───────────┐                            ┌───────────┐
   │           │─────────open tcp 389──────▶│           │
   │           │◀────────────ok─────────────│           │
   │           │                            │  Server   │
   │           │────────ldap starttls──────▶│           │
   │           │◀──────────referral─────────│           │
   │           │                            └───────────┘
   │  Client   │
   │           │                            ┌───────────┐
   │           │────────ldap starttls──────▶│           │
   │           │◀──────────success──────────│           │
   │           │                            │ Malicious │
   │           │                            │  Server   │
   │           │──────tls client hello─────▶│           │
   │           │◀─────tls server hello──────│           │
   │           │────────tls key xchg───────▶│           │
   │           │◀────────tls finish─────────│           │
   │           │                            │           │
   │           │───────TLS(ldap bind)──────▶│           │
   └───────────┘                            └───────────┘

                                  Figure 4

   In this example, the client was redirected and then continues the
   StartTLS against the malicious server.  This is partial mitigated by
   TLS certificate validation, however it is prevalent in LDAP
   deployments to disable certification validation due to complexity of
   managing TLS with LDAP environments.

   Disabling TLS certification validation however allows direct MITM of
   the connection, meaning that this second attack pattern is less
   important compared to the former.

4.3.  Incorrect Client Handling

   Some clients do not immediately install StartTLS after the initial
   connection.  Clients then perform a number of operations such as
   search, and will only install StartTLS when they are about to
   transmit a Bind operation.

   Binds are not the only operation in LDAP that require integrity.  The
   ability to tamper with search results may allow authorisation or
   authentication bypass against some hosts which can compromise
   application and platform security.







Brown                     Expires 3 April 2023                  [Page 6]

Internet-Draft           LDAP Deprecate StartTLS          September 2022


4.4.  Configuration Error

   Since StartTLS is on top of a plaintext connection, it is possible
   and likely for configuration error to occur where StartTLS is never
   requested.  It is hard to observe a difference in these cases since
   connections will proceed and work correctly, this error can go
   undetected for long periods of time.

5.  GSSAPI

   GSSAPI has not been examined for similar issues.  However it is
   possible that they exist.

   A contributing factor to issues in these cases is that GSSAPI
   generally attempts to install it's own security layer and does this
   over plaintext LDAP ports.  While plaintext communication is allowed
   to LDAP servers, the risk of incorrect client handling or
   configuration error remain.

6.  Recommendations

   All LDAP communication between a client and server MUST be consider
   security sensitive and MUST be encrypted.

   StartTLS SHOULD be deprecated in favor of LDAPS.  This enforces that
   all communication is encrypted.

   Clients SHOULD perform TLS certification verification to ensure they
   are communicating to the expected LDAP server.

   Plaintext LDAP ports SHOULD be disabled to prevent disclosure of
   sensitive data over plaintext.

   GSSAPI does not resolve all of these risks or issues, and SHOULD also
   be performed over LDAPS rather than relying on it's own encryption
   layers.

7.  Related Research

   RFC 8314 [RFC8314] describes similar and related issues with StartTLS
   and it's usage in IMAP and SMTP.  RFC 8314 recommends the use of
   IMAPS/SMTPS instead of IMAP/SMTP with StartTLS.

   StartTLS in LDAP [LDAP_STARTTLS_ISSUES] is the authors original
   document describing these issues.

   Futher issues in StartTLS may exist.  This document is not an
   exhaustive examination of the topic.



Brown                     Expires 3 April 2023                  [Page 7]

Internet-Draft           LDAP Deprecate StartTLS          September 2022


8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

8.2.  Informative References

   [LDAP_STARTTLS_ISSUES]
              Brown, W.B., "StartTLS in LDAP - Issues", 2021,
              <https://fy.blackhats.net.au/blog/html/2021/08/12/
              starttls_in_ldap.html>.

   [RFC2078]  Linn, J., "Generic Security Service Application Program
              Interface, Version 2", RFC 2078, DOI 10.17487/RFC2078,
              January 1997, <https://www.rfc-editor.org/info/rfc2078>.

   [RFC2830]  Hodges, J., Morgan, R., and M. Wahl, "Lightweight
              Directory Access Protocol (v3): Extension for Transport
              Layer Security", RFC 2830, DOI 10.17487/RFC2830, May 2000,
              <https://www.rfc-editor.org/info/rfc2830>.

   [RFC4511]  Sermersheim, J., Ed., "Lightweight Directory Access
              Protocol (LDAP): The Protocol", RFC 4511,
              DOI 10.17487/RFC4511, June 2006,
              <https://www.rfc-editor.org/info/rfc4511>.

   [RFC8314]  Moore, K. and C. Newman, "Cleartext Considered Obsolete:
              Use of Transport Layer Security (TLS) for Email Submission
              and Access", RFC 8314, DOI 10.17487/RFC8314, January 2018,
              <https://www.rfc-editor.org/info/rfc8314>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/info/rfc8446>.

Author's Address

   William Brown
   SUSE SOFTWARE SOLUTIONS AUSTRALIA PTY LTD
   Brisbane Queensland 4000
   Australia
   Email: william.brown@suse.com





Brown                     Expires 3 April 2023                  [Page 8]
